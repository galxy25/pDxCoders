require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe CardsController, type: :controller do
  context 'with two valid cards' do

    let!(:text_card) {FactoryGirl.create(:text_content, id: 1)}
    let!(:titled_card_content) {FactoryGirl.create(:titled_card_content, id: 2)}

    context 'with a signed in user' do

      before :each do
        @user = FactoryGirl.create(:user)
        sign_in(@user)
      end

      describe '#index' do
        it 'should return both cards' do
          get :index , :format => :json
          @results = JSON.parse(response.body)
          expect(@results.count).to be 2
        end
      end

      describe '#show' do
        it 'should return card asked for' do
          @card = Card.where(content_id: text_card.id, content_type_id: 1).first
          get :show , :id => @card.id, :format => :json
          @results = JSON.parse(response.body)
          expect(@results['id']).to eq @card.id
        end
      end
    end

    context 'without a valid user' do
      describe '#index' do
          it 'should return 403' do

          end
      end
    end

  end

end
